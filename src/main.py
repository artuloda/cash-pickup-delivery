import time
from algorithm import Instance, Context, Algorithm, Results


def print_ASCII_logo():
    logo_str =  """
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((&@@@@((@@@@@@@@(@@@@@@@@%%@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((&@((((((((@@(((((((@@%%%%%%%%@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((&@((((((((@@(((((((@@%%%%%%%%@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((&@@@@((#@@@@@@(((@@@@@@&%%&@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@((((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((((@@@@@@@@@@@@@@@@(((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@((((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((@@@@@@@@@@@@@@@@@(((@@@@@@@@@@@@@@@@@@@@@@@@@@@((&@@#(((((@@@((@@@(((((@@@@@%%%%%@@@@%%%%%@@
    @@@@@@@((((((@((((@@@@@@@@%(((((%@@@@@@@@@@@@#((((((@@@@@((((@@@@@@@@%(((((%@(((@@@@@@@@@((((((@@@@@@@@@@@@((&@((((((((@@((@@((((((((@%%%%%%%%@@%%%%%%%@
    @@@(((((((((((((((@@@@@(((((((((((((@@@@@(((((((((((((@@@((((@@@@@((((((((((((((@@@@@(((((((((((((@@@@@@@@@((&@@((((((@@@((@@(((((((@@@%%%%%%&@@%%%%%%%@
    @@((((@@@@@@@@((((@@@((((@@@@@@@@((((@@@((((@@@@@@@@@@@@@((((@@@((((@@@@@@@@@(((@@@@(((%@@@@@@@@(((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @((((@@@@@@@@@((((@@@((((((((((((((((@@((((@@@@@@@@@@@@@@((((@@@((((@@@@@@@@@(((@@@((((((((((((((((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@(((@@@@@@@@@((((@@@((((@@@@@@@@@@@@@@((((@@@@@@@@@@@@@@((((@@@((((@@@@@@@@@(((@@@%(((@@@@@@@@@@@@@@@@@@@@((&@@((((((@@@(((((((@@@%%%%%%@@@@@@@@@@@@@@@
    @@#(((((@@@@@@((((@@@@(((((@@@@@@#((@@@@#(((((@@@@@(((@@@((((@@@@(((((@@@@@@@(((@@@@((((((@@@@@@((@@@@@@@@@((&@((((((((@@(((((((@@%%%%%%%%@@@@@@@@@@@@@@
    @@@@@(((((((((((((@@@@@@((((((((((((@@@@@@@(((((((((((@@@((((@@@@@@(((((((((((((@@@@@@@((((((((((((@@@@@@@@((&@@@(((((@@@@(((((@@@@%%%%%@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                        """ 
    print(logo_str)


def execute():
    """
    Executes the algorithm
    """
    start_time = time.time()

    # Problem Context
    context = Context()
    context.logger.info(context.parameters)

    # Instance
    instance = Instance(context)
    context.logger.info(instance)

    # Algorithm
    algorithm = Algorithm(context, instance)
    algorithm.print_results()

    # Results
    Results(context, instance, algorithm.best_solution)

    context.logger.info(f"Time taken: {time.time() - start_time} s.")
    

if __name__ == '__main__':
    print_ASCII_logo()
    execute()
   